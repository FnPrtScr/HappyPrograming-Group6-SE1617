generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


enum Role {
  ADMIN
  MENTEE
  MENTOR
}

enum RequestStatus {
  OPEN
  PROCESSING
  CANCEL
  CLOSED
}

model User {
  id                Int           @id @default(autoincrement())
  username          String        @unique @map("username") @db.VarChar(50)
  password          String        @db.VarChar(250)
  email             String?       @db.VarChar(250)
  name              String?       @db.VarChar(250)
  address           String?       @db.VarChar(250)
  phone             String?       @db.VarChar(250)
  birthday          DateTime?     @db.Date
  sex               String?       @db.VarChar(250)
  introduce         String?       @db.VarChar(250)
  avatar            String?       @db.VarChar(250)
  role              Role
  Image             Image[]
  MentorSkill       MentorSkill[]
  MenteeCodeRequest CodeRequest[] @relation("from")
  MentorCodeRequest CodeRequest[] @relation("to")

  @@map("user")
}

model CodeRequest {
  id               Int                @id @default(autoincrement())
  title            String?            @db.VarChar(250)
  content          String?            @db.VarChar(250)
  deadline         DateTime?          @db.Date
  menteeId         Int                @map("mentee_id")
  mentorId         Int                @map("mentor_id")
  status           RequestStatus      @default(OPEN)
  Mentee           User               @relation("from", fields: [menteeId], references: [id])
  Mentor           User               @relation("to", fields: [mentorId], references: [id])
  CodeRequestSkill CodeRequestSkill[]

  @@map("code_request")
}

model CodeRequestSkill {
  codeRequestId Int         @map("code_request_id")
  skillId       Int         @map("skill_id")
  Skill         Skill       @relation(fields: [skillId], references: [id])
  CodeRequest   CodeRequest @relation(fields: [codeRequestId], references: [id])

  @@id([codeRequestId, skillId])
  @@map("code_request_skill")
}

// model Answer {
//   id                  Int     @id @default(autoincrement())
//   mentorCodeRequestId Int     @map("mentor_code_request_id")
//   content             String? @db.VarChar(250)

//   @@map("answer")
// }

// model Feedback {
//   id       Int     @id @default(autoincrement())
//   mentee   User    @relation(fields: [menteeId], references: [id])
//   menteeId Int     @map("mentee_id")
//   star     Int?
//   comment  String? @db.VarChar(250)

//   @@map("feedback")
// }

// model FeedbackAnswer {
//   id         Int @id @default(autoincrement())
//   feedbackId Int @map("feedback_id")
//   answerId   Int @map("answer_id")

//   @@map("feedback_answer")
// }

// model HireRelatitonship {
//   mentee   Mentee @relation(fields: [menteeId], references: [id])
//   menteeId Int    @map("mentee_id")
//   mentor   Mentor @relation(fields: [mentorId], references: [id])
//   mentorId Int    @map("mentor_id")

//   @@id([menteeId, mentorId])
//   @@map("hire_relationship")
// }

// model HireRequest {
//   mentee   Mentee        @relation(fields: [menteeId], references: [id])
//   menteeId Int           @map("mentee_id")
//   mentor   Mentor        @relation(fields: [mentorId], references: [id])
//   mentorId Int           @map("mentor_id")
//   title    String?       @db.VarChar(250)
//   content  String?       @db.VarChar(250)
//   status   RequestStatus

//   @@id([menteeId, mentorId])
//   @@map("hire_request")
// }

// model HistoryHireRelationship {
//   mentee    Mentee    @relation(fields: [menteeId], references: [id])
//   menteeId  Int       @map("mentee_id")
//   mentor    Mentor    @relation(fields: [mentorId], references: [id])
//   mentorId  Int       @map("mentor_id")
//   closedate DateTime? @db.Date

//   @@id([menteeId, mentorId])
//   @@map("history_hire_relationship")
// }

model Image {
  id     Int     @id @default(autoincrement())
  userId Int     @map("user_id")
  image  String? @db.VarChar(250)
  User   User    @relation(fields: [userId], references: [id])

  @@map("image")
}

// model Mentee {
//   id     Int  @id @default(autoincrement())
//   user   User @relation(fields: [userId], references: [id])
//   userId Int  @unique @map("user_id")

//   Feedback                Feedback[]
//   HireRelatitonship       HireRelatitonship[]
//   HireRequest             HireRequest[]
//   HistoryHireRelationship HistoryHireRelationship[]
//   CodeRequest             CodeRequest[]

//   @@map("mentee")
// }

// model Mentor {
//   id          Int     @id @default(autoincrement())
//   user        User    @relation(fields: [userId], references: [id])
//   userId      Int     @unique @map("user_id")
//   achievement String? @db.VarChar(250)
//   costHire    Float   @map("cost_hire") @db.Float

//   HireRelatitonship       HireRelatitonship[]
//   HireRequest             HireRequest[]
//   HistoryHireRelationship HistoryHireRelationship[]
//   MentorJob               MentorJob[]
//   MentorSkill             MentorSkill[]
//   CodeRequest             CodeRequest[]

//   @@map("mentor")
// }

// model mentorCodeRequest {
//   id            Int @id @default(autoincrement())
//   coderequestid Int
//   mentorid      Int

//   @@index([coderequestid], map: "coderequestid")
//   @@index([mentorid], map: "mentorid")
// }

// model mentorcoderequeststatus {
//   id                  Int @id @default(autoincrement())
//   mentorcoderequestid Int
//   statusid            Int

//   @@index([mentorcoderequestid], map: "mentorcoderequestid")
//   @@index([statusid], map: "statusid")
// }

// model Job {
//   id        Int         @id @default(autoincrement())
//   jobName   String?     @map("job_name") @db.VarChar(250)
//   MentorJob MentorJob[]

//   @@map("job")
// }

// model MentorJob {
//   id       Int    @id @default(autoincrement())
//   mentor   Mentor @relation(fields: [mentorId], references: [id])
//   mentorId Int    @map("mentor_id")
//   job      Job    @relation(fields: [jobId], references: [id])
//   jobId    Int    @map("job_id")

//   @@map("mentor_job")
// }

model Skill {
  id               Int                @id @default(autoincrement())
  name             String             @unique @db.VarChar(250)
  active           Boolean            @default(true)
  CodeRequestSkill CodeRequestSkill[]
  MentorSkill      MentorSkill[]

  @@map("skill")
}

model MentorSkill {
  mentorId Int   @map("mentor_id")
  skillId  Int   @map("skill_id")
  Mentor   User  @relation(fields: [mentorId], references: [id])
  Skill    Skill @relation(fields: [skillId], references: [id])

  @@id([mentorId, skillId])
  @@map("mentor_skill")

}
